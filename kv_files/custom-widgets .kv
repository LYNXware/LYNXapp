#:kivy 2.1.0

<ActionBarCustom@ActionBar>:
    background_normal: ''
    background_down: ''
    background_color: (1,1,1,0.3) #0, 0, 0, 1

    pos_hint: {'top':1}
    size_hint_y: 0.05
    ActionView:
        use_separator: False
        ActionPrevious:
            #title: 'Action Bar'
            with_previous: False
            app_icon: app.path_image_home
            on_release:
                app.root.current = 'StartWindow'
                app.root.get_screen('StartWindow').children[1].update_start_window()
                #app.update_theme()

        ActionButton:
            text: 'Help'
            color: app.theme['gui_text']
            on_release:
                app.root.current = 'HelpWindow'
                #root.manager.transition.direction ='down'
        ActionButton:
            text: 'Theme'
            color: app.theme['gui_text']
            on_release:
                app.root.current = 'ThemeWindow'
                #root.manager.transition.direction ='down'
        ActionButton:
            text: 'Settings'
            color: app.theme['gui_text']
            on_release:
                app.root.current = 'SettingsWindow'

        ActionButton:
            text: 'Layouts'
            color: app.theme['gui_text']
            on_release:
                app.root.current = 'LayoutsWindow'
                #root.manager.transition.direction ='down'




<KeyButton@Button>:
    color: app.theme['gui_button_text']
    background_color: app.theme['gui_button']
    on_release:
        app.root.get_screen('AssignmentWindow').children[1].assign_event(self.text, self.hexval)


<GUI_Button@Button>:
    color: app.theme['gui_button_text']
    background_color: app.theme['gui_button']




<SpinnerDropdown@SpinnerOption>:
    color: app.theme['gui_button_text']
    background_color: app.theme['gui_dropdown']

<GUI_Spinner@Spinner>:
    color: app.theme['gui_button_text']
    background_color: app.theme['gui_button']
    option_cls: "SpinnerDropdown"




<DeviceButton>:

    fs: (self.height*1**2 + self.width*1**2)/15

    size_hint: (0.04, 0.075)

    custom_pos_hint: 0.1, 0.1
    start_pos:
        root.parent.width * self.custom_pos_hint[0] - self.width/2,\
        root.parent.height * self.custom_pos_hint[1] - self.height/2
    pos: self.start_pos

    drag_rectangle: self.x, self.y, self.width, self.height
    drag_timeout: 100
    drag_distance: 0

    background_color: (0,0,0,0)
    background_normal: ''
    canvas.before:
        Color:
            rgba: app.theme['cat_button'] if self.state == 'normal' else  app.theme['cat_button_pushed'] #(1,1,1,1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [100]

    on_touch_move: self.moving = True

    on_release:
        app.root.current = 'AssignmentWindow'
        app.root.get_screen('AssignmentWindow').children[1].current_button['name'] = self.name
        app.root.get_screen('AssignmentWindow').children[1].current_button['function'] = self.function
        app.root.get_screen('AssignmentWindow').children[1].current_button['description'] = self.description

    BoxLayout:
        id: button_label
        size: root.size
        pos: root.pos
        orientation: 'vertical'




<ThemeDeviceButton@Button>:

    fs: (root.height*1**2 + root.width*1**2)/8
    background_color: (0,0,0,0)
    background_normal: ''
    size_hint: (0.030927835*1.3, 0.055*1.3)
    canvas.before:
        Color:
            rgba: app.theme['cat_button'] if self.state == 'normal' else  app.theme['cat_button_pushed'] #(1,1,1,1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [100]
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: 'vertical'
        Label:
            text: 'name'
            font_size: root.fs
            color:  app.theme['button_name']
        Label:
            text: 'Function'
            font_size: root.fs
            color: app.theme['button_function']
        Label:
            text: 'Description'
            font_size: root.fs
            color:  app.theme['button_description']





